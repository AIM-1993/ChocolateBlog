{"version":3,"sources":["ListItem.js","dialog.js","Table.js","Timer.js","About.js","serviceWorker.js","index.js"],"names":["ListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFinished","bind","assertThisInitialized","handleDelete","status","item","obj","id","name","finishedChange","totalChange","react_default","a","createElement","scope","key","onClick","className","Component","Dialog","handleClick","len","nums","newid","value","refs","myText","addNewTask","type","ref","placeholder","Table","state","list","finished","newitem","allTask","push","setState","todoItem","sum","forEach","_this2","map","index","src_ListItem","updateTotal","dialog","addTask","length","Clock","date","Date","timerID","setInterval","tick","clearInterval","toLocaleTimeString","React","About","Boolean","window","location","hostname","match","SiteRouter","BrowserRouter","Route","exact","path","component","ReactDOM","render","src_SiteRouter","document","getElementById","src_Timer","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1c204b4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './table.css';\r\nclass ListItem extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.handleFinished = this.handleFinished.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleFinished () {\r\n        var status = this.props.item.status;\r\n\r\n        status = (status === 0 ? 1 : 0);\r\n\r\n        var obj = {\r\n            id: this.props.item.id,\r\n            name: this.props.item.name,\r\n            status: status\r\n        }\r\n\r\n        this.props.finishedChange(obj); //执行父组件传来的方法\r\n    }\r\n\r\n    handleDelete () {\r\n        this.props.totalChange(this.props.item); //执行父组件传来的方法\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        const item = this.props.item;\r\n        return (\r\n          <tr>\r\n            <td scope='col' key={item.id}>{item.id}</td>\r\n            <td>{ item.name }</td>\r\n            <td><button onClick={this.handleDelete} className=\"btn btn-warning btn-sm\">删除</button></td>\r\n          </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListItem;\r\n","import React, { Component } from 'react';\r\n\r\nclass Dialog extends Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleClick = this.handleClick.bind(this);\r\n\t}\r\n\r\n\thandleClick () {\r\n\t\tvar len = this.props.nums;\r\n\t\tvar newid = len > 0 ? len : 0;\r\n\t\tvar value = this.refs.myText.value;\r\n\t\tif (value !== '') {\r\n\t\t\tvar obj = {\r\n\t\t\t\tid: newid,\r\n\t\t\t\tname: value,\r\n\t\t\t\tstatus: 0\r\n\t\t\t};\r\n\t\t\tthis.refs.myText.value = '';\r\n\t\t\tthis.props.addNewTask(obj);\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\r\n\t\t\t<div className=\"dialog\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type=\"text\" ref=\"myText\" placeholder=\"你想做点什么\"/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<input type=\"button\" value=\"保存任务\" onClick={this.handleClick}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Dialog;\r\n","import React, { Component } from 'react';\r\nimport ListItem from './ListItem';\r\nimport Dialog from './dialog';\r\nimport './table.css';\r\n\r\nclass Table extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        //初始任务列表\r\n        this.state = {\r\n            list: [],\r\n            finished: 0\r\n        };\r\n    }\r\n\r\n    //添加新任务，在组件中以props的形式传递给子组件\r\n    addTask (newitem) {\r\n        var allTask = this.state.list;\r\n        allTask.push(newitem);\r\n        this.setState({\r\n            list: allTask\r\n        });\r\n    }\r\n\r\n\r\n    //更新任务总数，在组件中以props的形式传递给子组件\r\n    updateTotal (todoItem) {\r\n        var obj = [], sum = 0;\r\n        this.state.list.forEach((item) => {\r\n            if (item.id !== todoItem.id) {\r\n                obj.push(item);\r\n                if (item.status === 1 ) {\r\n                    sum++;\r\n                }\r\n            }\r\n        });\r\n        this.setState({\r\n            list: obj,\r\n            finished: sum\r\n        });\r\n    }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container table-responsive\">\r\n        <h1>TodoList</h1>\r\n        <table className=\"table table-hover table-dark\">\r\n          <thead className=\"bg-color\">\r\n            <tr>\r\n              <th scope=\"col\">Id</th>\r\n              <th scope=\"col\">Things</th>\r\n              <th scope=\"col\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"no-underline\">\r\n                { this.state.list.map ((item, index) =>\r\n                  <ListItem\r\n                      key={index}\r\n                      totalChange={this.updateTotal.bind(this)}\r\n                      item={item}\r\n                  />\r\n                )}\r\n\r\n          </tbody>\r\n        </table>\r\n        <Dialog addNewTask={this.addTask.bind(this)} nums={this.state.list.length}/>\r\n      </div>\r\n\r\n\r\n  );\r\n  }\r\n}\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\nimport './Timer.css';\r\n\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {date: new Date()}\r\n    }\r\n    componentDidMount() {\r\n      this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n    }\r\n    componentWillUnmount() {\r\n      clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n      this.setState({\r\n        date: new Date()\r\n      });\r\n    }\r\n    render() {\r\n    return(\r\n      <div className=\"Timer\">\r\n        <header className=\"Timer-header\">\r\n          <p>现在时间:  {this.state.date.toLocaleTimeString()}.</p>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Clock;\r\n","import React, { Component } from 'react';\r\nimport './about.css';\r\n\r\nclass About extends Component {\r\n  render () {\r\n    return (<h2>这是一个简易而友好的采用Django + React实现的前后端交互的Todolist应用。</h2>);\r\n  }\r\n}\r\n\r\nexport default About;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import './main.css';\nimport Table from './Table';\nimport Clock from './Timer';\nimport About from './About';\n// import Record from './Record';\nimport {\nBrowserRouter,\nRoute\n} from 'react-router-dom';\n\n// import Record from './Record';\nimport * as serviceWorker from './serviceWorker';\n\nclass SiteRouter extends BrowserRouter {\n  render() {\n    return (\n        <BrowserRouter>\n          <div>\n            <Route exact path=\"/\" component={Table}/>\n            <Route path=\"/about\" component={About}/>\n          </div>\n      </BrowserRouter>\n    );\n  }\n}\n\n\nReactDOM.render(<SiteRouter />, document.getElementById('site'));\nReactDOM.render(<Clock />, document.getElementById('timer'));\n// ReactDOM.render(<Record />, document.getElementById('record'));\n\n// ReactDOM.render(<Record />, document.getElementById('record'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}